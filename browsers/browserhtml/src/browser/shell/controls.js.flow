/* @flow */

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

import type {Address, DOM} from "reflex"
import {Effects} from "reflex"

import * as Button from "../../common/button"
import * as Toggle from "../../common/toggle"

export type Model =
  { close: Button.Model
  , minimize: Button.Model
  , toggle: Toggle.Model
  }

export type Action =
  | { type: "Over" }
  | { type: "Out" }
  | { type: "Enable" }
  | { type: "Disable" }
  | { type: "Ignore" }
  | { type: "CloseWindow" }
  | { type: "MinimizeWindow" }
  | { type: "ToggleWindowFullscreen" }
  | { type: "FullscreenToggled" }
  | { type: "CloseButton"
    , source: Button.Action
    }
  | { type: "MinimizeButton"
    , source: Button.Action
    }
  | { type: "ToggleButton"
    , source: Toggle.Action
    }


declare export var CloseWindow:Action
declare export var MinimizeWindow:Action
declare export var ToggleWindowFullscreen:Action
declare export var FullscreenToggled:Action
declare export var Ignore:Action
declare export var Over:Action
declare export var Out:Action
declare export var Enable:Action
declare export var Disable:Action

declare export function init
  (isDisabled:boolean, isPointerOver:boolean, isMaximized:boolean):
  [Model, Effects<Action>]

declare export function update
  (model:Model, action:Action):
  [Model, Effects<Action>]

declare export function view
  (model:Model, address:Address<Action>):
  DOM
