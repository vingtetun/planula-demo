/* @flow */

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

import {Effects} from "reflex"
import type {Address, DOM} from "reflex"
import type {Rules} from "../common/style"
import type {Tagged} from "../common/prelude"
import * as Control from "./control"
import * as Target from "./target"
import * as Focusable from "./focusable"
import * as Editable from "./editable"

export type Model =
  { value: string
  , selection: ?Editable.Selection
  , placeholder: ?string
  , isDisabled: boolean
  , isFocused: boolean
  }



export type Action
  = Tagged<"Focusable", Focusable.Action>
  | Tagged<"Editable", Editable.Action>
  | Tagged<"Control", Control.Action>
  | { type: "Change"
    , value: string
    , selection: Editable.Selection
    }
  | { type: "Focus" }
  | { type: "Blur" }

declare export var Focus:Action
declare export var Blur:Action
declare export var Change:Action
declare export var Enable:Action
declare export var Disable:Action

declare export function init
  ( value?:string
  , selection?:?Editable.Selection
  , placeholder?:string
  , isDisabled?:boolean
  ):
  [Model, Effects<Action>]

declare export function update
  (model:Model, action:Action):
  [Model, Effects<Action>]


export type StyleSheet =
  { base: Rules
  , focused?: Rules
  , blured?: Rules
  , enabled?: Rules
  , disabled?: Rules
  , over?: Rules
  , out?: Rules
  , active?: Rules
  , inactive?: Rules
  }
export type ContextStyle = Rules

declare export function view
  (key:string, styleSheet:StyleSheet):
  (model:Model, address:Address<Action>, contextStyle?:ContextStyle) =>
  DOM
