/* @flow */

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

import {Effects} from "reflex"
import type {Address, DOM} from "reflex"
import type {Tagged} from "../common/prelude"
import type {Rules} from "../common/style"
import * as Target from "./target"
import * as Focusable from "./focusable"
import * as Control from "./control"


export type Model =
  { isDisabled: boolean
  , isActive: boolean
  , isPointerOver: boolean
  , isFocused: boolean
  , text: string
  }


export type Action =
  | { type: "Down" }
  | { type: "Press" }
  | { type: "Up" }
  | { type: "Control"
    , source: Control.Action
    }
  | { type: "Focusable"
    , source: Focusable.Action
    }
  | { type: "Target"
    , source: Target.Action
    }

export type ContextStyle = Rules
export type StyleSheet =
  { base: Rules
  , focused?: Rules
  , blured?: Rules
  , enabled?: Rules
  , disabled?: Rules
  , over?: Rules
  , out?: Rules
  , active?: Rules
  , inactive?: Rules
  }


declare export var Down:Action
declare export var Up:Action
declare export var Press:Action
declare export var Enable:Action
declare export var Disable:Action
declare export var Focus:Action
declare export var Blur:Action
declare export var Over:Action
declare export var Out:Action

declare export function init
  ( isDisabled:boolean
  , isFocused:boolean
  , isActive:boolean
  , isPointerOver:boolean
  , text?:string
  ):
  [Model, Effects<Action>]

declare export function update
  (model:Model, action:Action):
  [Model, Effects<Action>]

declare export function view
  (key:string, styleSheet:StyleSheet):
  (model:Model, address:Address<Action>, contextStyle?:ContextStyle) =>
  DOM
