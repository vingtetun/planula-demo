/* @flow */

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

import {Effects, Task} from "reflex"
import type {Address, Never} from "reflex"
import type {Result} from "./result"

export type Name = string
export type Value
  = number
  | boolean
  | string
  | null


export type Settings =
  { [key:Name]: Value
  }

export type Model = ?Settings

export type ResultSettings =
  Result<Error, Settings>


export type Action =
  | { type: "Fetched"
    , result: ResultSettings
    }
  | { type: "Updated"
    , result: ResultSettings
    }
  | { type: "Changed"
    , result: ResultSettings
    }

declare export function Fetched
  (result:ResultSettings):
  Action

declare export function Updated
  (result:ResultSettings):
  Action

declare export function Changed
  (result:ResultSettings):
  Action

declare export function fetch (names:Array<Name>):
  Task<Never, ResultSettings>

declare export function change (settings:Settings):
  Task<Never, ResultSettings>

declare export function observe (namePattern:string):
  Task<Never, ResultSettings>

declare export function init
  (names:Array<Name>):
  [Model, Effects<Action>]

declare export function update
  (model:Model, action:Action):
  [Model, Effects<Action>]
